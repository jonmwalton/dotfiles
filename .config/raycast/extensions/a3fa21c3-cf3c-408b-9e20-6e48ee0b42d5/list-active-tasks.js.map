{
  "version": 3,
  "sources": ["../src/list-active-tasks.tsx", "../src/api.ts", "../src/components/ProjectsDropdown.tsx", "../src/components/Details.tsx", "../src/utils/dateFormatters.ts", "../src/components/Modify.tsx", "../src/addTaskAdvanced.tsx"],
  "sourcesContent": ["import { showToast, Toast, List, popToRoot, Action, ActionPanel } from \"@raycast/api\";\nimport { useState, useEffect } from \"react\";\nimport { deleteTask, getActiveTasks, getAllProjects, getTasksForProject, markTaskAsDone, updateTask } from \"./api\";\nimport ProjectsDropdown from \"./components/ProjectsDropdown\";\nimport { Task } from \"./types/types\";\nimport Details from \"./components/Details\";\nimport AddTaskAdvanced from \"./addTaskAdvanced\";\n\nconst ListActiveTabs = () => {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [projects, setProjects] = useState<Set<string>>(new Set([]));\n\n  useEffect(() => {\n    getTasks();\n    getProjects();\n  }, []);\n\n  const showCustomToast = async (title: string, style: Toast.Style, message: string) => {\n    await showToast({\n      title: title,\n      style: style,\n      message: message,\n    });\n  };\n\n  const getTasks = async () => {\n    try {\n      const data = await getActiveTasks();\n      setTasks(data);\n    } catch (error) {\n      showCustomToast(\"Error\", Toast.Style.Failure, `${error}`);\n      popToRoot();\n    }\n  };\n\n  const getProjects = async () => {\n    try {\n      const data = await getAllProjects();\n      setProjects(data);\n    } catch (error) {\n      showCustomToast(\"Error\", Toast.Style.Failure, `${error}`);\n    }\n  };\n\n  const filterByProject = async (project: string) => {\n    if (project === \"All\") {\n      getTasks();\n    } else {\n      try {\n        console.log(`project changed to ${project}`);\n        const data = await getTasksForProject(project);\n        console.log(data);\n        setTasks(data);\n      } catch (error) {\n        showCustomToast(\"Error\", Toast.Style.Failure, `${error}`);\n      }\n    }\n  };\n\n  const markTaskAsDoneAndUpdateList = async (taskUuid: string) => {\n    await markTaskAsDone(taskUuid);\n    getTasks();\n    showCustomToast(\"Success\", Toast.Style.Success, \"Task marked as done\");\n  };\n\n  const onProjectChange = (newValue: string) => {\n    filterByProject(newValue);\n  };\n\n  const deleteAndUpdateList = async (uuid: string) => {\n    await deleteTask(uuid);\n    getTasks();\n    showCustomToast(\"Success\", Toast.Style.Success, \"Task Deleted\");\n  };\n\n  const startOrStopTask = async (task: Task) => {\n    const action = task.tags && Array.from(task.tags).includes(\"next\") ? \"-next\" : \"+next\";\n    await updateTask(task.uuid, undefined, undefined, [action]);\n    getTasks();\n  };\n\n  return (\n    <List\n      navigationTitle=\"Tasks\"\n      searchBarAccessory={<ProjectsDropdown projects={projects} onProjectChange={onProjectChange} />}\n    >\n      {tasks.length === 0 ? (\n        <List.EmptyView\n          title=\"No Tasks Found\"\n          description=\"make sure you have added at least one task.\"\n          actions={\n            <ActionPanel>\n              <Action.Push key=\"newTask\" title=\"Add a New Task\" target={<AddTaskAdvanced />} />\n            </ActionPanel>\n          }\n        />\n      ) : (\n        tasks.map((task) => (\n          <List.Item\n            id={task.uuid}\n            keywords={[task.tags ? [...task.tags].join(\" \") : \"\", task.project || \"\"]}\n            title={task.description}\n            key={task.uuid}\n            accessories={[{ text: task.project }]}\n            actions={\n              <ActionPanel>\n                <Action.Push key=\"Details\" title=\"Details\" target={<Details task={task} />} />\n                <Action title=\"Mark as Done\" onAction={() => markTaskAsDoneAndUpdateList(task.uuid)} />\n                <Action\n                  key=\"start\"\n                  title={task.tags && Array.from(task.tags).includes(\"next\") ? \"Stop\" : \"Start\"}\n                  shortcut={{ modifiers: [\"ctrl\"], key: \"s\" }}\n                  onAction={() => startOrStopTask(task)}\n                />\n                <Action\n                  key=\"delete\"\n                  title=\"Delete\"\n                  style={Action.Style.Destructive}\n                  shortcut={{ modifiers: [\"ctrl\"], key: \"x\" }}\n                  onAction={() => deleteAndUpdateList(task.uuid)}\n                />\n                <Action.Push\n                  key=\"new\"\n                  title=\"Add New Task\"\n                  target={<AddTaskAdvanced />}\n                  shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n                />\n              </ActionPanel>\n            }\n          />\n        ))\n      )}\n    </List>\n  );\n};\n\nexport default ListActiveTabs;\n", "import { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { Task, Status, Priority } from \"./types/types\";\nimport { getPreferenceValues } from \"@raycast/api\";\n\nconst execPromise = promisify(exec);\nconst taskPath = getPreferenceValues().taskPath;\n\nconst overrideError = \"Configuration override rc.json.array:on\\n\";\nconst command = `${taskPath} export rc.json.array:on`;\n\n//\n// returns a list of all tasks sorted by urgency\nexport const getTasks = async () => {\n  let tasks: Task[] = [];\n  try {\n    const { stdout, stderr } = await execPromise(command);\n    if (stderr && stderr !== overrideError) {\n      throw new Error(\"please make sure you have set the path to task in the extension settings\");\n    }\n\n    const data = JSON.parse(stdout) as Task[];\n    if (data) tasks = data.sort((a, b) => b.urgency - a.urgency);\n  } catch (error) {\n    throw new Error(\"Please make sure you have set the path to task in the settings\");\n  }\n  return tasks;\n};\n\n//\n// returns a single task by its uuid\nexport const getTask = async (uuid: string) => {\n  const tasks = await getTasks();\n  return tasks.find((task) => task.uuid === uuid);\n};\n\n// returns all pending tasks\nexport const getActiveTasks = async () => {\n  const tasks = await getTasks();\n  return tasks.filter((task) => task.status === Status.Pending);\n};\n\n// returns pending tasks for a project\nexport const getTasksForProject = async (project: string) => {\n  const tasks = await getTasks();\n  // Testing => must give me the active task in the next tag\n  return tasks.filter((task) => task.project === project && task.status === Status.Pending);\n};\n\n// returns all pending tasks for a tag (defaults to next)\nexport const getTasksForTag = async (tag = \"next\") => {\n  const tasks = await getTasks();\n  return tasks.filter((task) => task.tags && Array.from(task.tags).includes(tag) && task.status === Status.Pending);\n};\n\nexport const addTask = async (commandString: string) => {\n  const command = `${taskPath} add ${commandString}`;\n\n  // execute command\n  try {\n    const { stderr } = await execPromise(command);\n    if (stderr) console.error(stderr);\n  } catch (error) {\n    throw new Error(`error in addTask function: \"${error}\"`);\n  }\n};\n\n// delete task by its uuid\nexport const deleteTask = async (uuid: string) => {\n  try {\n    const { stderr } = await execPromise(`${taskPath} delete ${uuid} rc.confirmation:off`);\n    if (stderr) console.error(stderr);\n  } catch (error) {\n    throw new Error(`error in deleteTask function: \"${error}\"`);\n  }\n};\n\n// mark a task as done by its uuid\nexport const markTaskAsDone = async (uuid: string) => {\n  try {\n    const { stderr } = await execPromise(`${taskPath} ${uuid} done`);\n    if (stderr) console.error(stderr);\n  } catch (error) {\n    throw new Error(`error in markTaskAsDone function: \"${error}\"`);\n  }\n};\n\nexport const updateTask = async (\n  uuid: string | null,\n  description?: string,\n  project?: string,\n  tags?: string[],\n  due?: string,\n  priority?: Priority | \"\"\n) => {\n  const commandParts = [`${taskPath}`];\n\n  if (uuid) {\n    commandParts.push(\"modify\", uuid);\n  } else {\n    commandParts.push(\"add\");\n  }\n\n  if (typeof description !== \"undefined\") {\n    commandParts.push(`\"${description}\"`);\n  }\n\n  if (typeof project !== \"undefined\") {\n    if (project !== \"\") {\n      commandParts.push(`project:\"${project}\"`);\n    } else {\n      commandParts.push(`project:`);\n    }\n  }\n\n  if (typeof tags !== \"undefined\") {\n    commandParts.push(...tags);\n  }\n\n  if (typeof due !== \"undefined\") {\n    commandParts.push(`due:${due}`);\n  }\n\n  if (typeof priority !== \"undefined\") {\n    if (priority) {\n      commandParts.push(`priority:${priority}`);\n    } else {\n      commandParts.push(`priority:`);\n    }\n  }\n\n  const command = commandParts.join(\" \");\n\n  // execute command\n  try {\n    const { stderr } = await execPromise(command);\n    if (stderr.includes(\"not a valid date\")) {\n      throw new Error(`Invalid due date format. Use the Y-M-D format or Taskwarrior format`);\n    }\n  } catch (error) {\n    throw new Error(`Error in modifyTask function. ${error}`);\n  }\n};\n\n// deletes all tasks in projects and thus deletes the project\nexport const deleteProject = async (project: string) => {\n  const tasks = await getTasksForProject(project);\n  if (tasks.length == 0) {\n    console.log(`project ${project} doesn't exist`);\n    return;\n  }\n\n  for (const task of tasks) {\n    await deleteTask(task.uuid);\n  }\n};\n\n// returns all projects with active tasks\nexport const getAllProjects = async () => {\n  const tasks = await getActiveTasks();\n  const projects = new Set<string>();\n  tasks.forEach((task) => {\n    if (task.project) projects.add(task.project);\n  });\n  projects.add(\"All\");\n  return projects;\n};\n", "import { List } from \"@raycast/api\";\n\nconst ProjectsDropdown = (props: { projects: Set<string>; onProjectChange: (newValue: string) => void }) => {\n  const { projects: projects, onProjectChange: onProjectChange } = props;\n  return (\n    <List.Dropdown\n      tooltip=\"Select Project\"\n      storeValue={true}\n      defaultValue={\"All\"}\n      onChange={(newValue) => {\n        onProjectChange(newValue);\n      }}\n    >\n      {Array.from(projects).map((project) => (\n        <List.Dropdown.Item key={project} title={project} value={project} />\n      ))}\n      <List.Dropdown.Section title=\"Projects\"></List.Dropdown.Section>\n    </List.Dropdown>\n  );\n};\n\nexport default ProjectsDropdown;\n", "import { useMemo } from \"react\";\nimport { Action, ActionPanel, Color, Detail, popToRoot, showToast, Toast } from \"@raycast/api\";\nimport { Priority, Task } from \"../types/types\";\nimport { formatDate, formatDueDate, getActiveTime } from \"../utils/dateFormatters\";\nimport Modify from \"./Modify\";\nimport AddTaskAdvanced from \"../addTaskAdvanced\";\nimport { deleteTask, markTaskAsDone, updateTask } from \"../api\";\n\nconst getRandomColor = (availableColors: Color[]): Color => {\n  const randomIndex = Math.floor(Math.random() * availableColors.length);\n  return availableColors[randomIndex];\n};\n\nconst Details = (props: { task: Task }) => {\n  const { task } = props;\n\n  const initialColors = (Object.values(Color) as Color[]).filter(\n    (color) => color !== Color.PrimaryText && color !== Color.SecondaryText\n  );\n\n  const assignRandomColorsToTags = (tags: string[]): Map<string, Color> => {\n    const tagColorMap = new Map<string, Color>();\n    const availableColors = [...initialColors];\n\n    tags.forEach((tag) => {\n      if (availableColors.length === 0) {\n        availableColors.push(...initialColors); // Regenerate available colors\n      }\n\n      const randomColor = getRandomColor(availableColors);\n      tagColorMap.set(tag, randomColor);\n\n      // Remove the used color\n      const index = availableColors.indexOf(randomColor);\n      availableColors.splice(index, 1);\n    });\n\n    return tagColorMap;\n  };\n\n  const tagColorMap = useMemo(() => assignRandomColorsToTags(task.tags ? [...task.tags] : []), [task.tags]);\n\n  const showCustomToast = async (title: string, style: Toast.Style, message: string) => {\n    await showToast({\n      title: title,\n      style: style,\n      message: message,\n    });\n  };\n\n  const markTaskAsDoneAndGoBack = async (taskUuid: string) => {\n    await markTaskAsDone(taskUuid);\n    showCustomToast(\"Success\", Toast.Style.Success, \"Task marked as done\");\n    popToRoot();\n  };\n\n  const deleteAndGoBack = async (uuid: string) => {\n    await deleteTask(uuid);\n    showCustomToast(\"Success\", Toast.Style.Success, \"Task Deleted\");\n    popToRoot();\n  };\n\n  const parsePriority = (priority: string): Priority | \"\" | undefined => {\n    switch (priority) {\n      case \"High\":\n        return Priority.H;\n      case \"Medium\":\n        return Priority.M;\n      case \"Low\":\n        return Priority.L;\n      case \"None\":\n        return \"\";\n      default:\n        return undefined;\n    }\n  };\n\n  const startOrStopTask = async (task: Task) => {\n    const action = task.tags && Array.from(task.tags).includes(\"next\") ? \"-next\" : \"+next\";\n    updateTask(task.uuid, undefined, undefined, [action]);\n    popToRoot();\n  };\n\n  return (\n    <Detail\n      navigationTitle={task.description}\n      markdown={`# ${task.description}`}\n      actions={\n        <ActionPanel>\n          <Action.Push key=\"Modify\" title=\"Modify\" target={<Modify task={task} />} />\n\n          <Action title=\"Mark as Done\" onAction={() => markTaskAsDoneAndGoBack(task.uuid)} />\n          <Action\n            key=\"delete\"\n            title=\"Delete\"\n            shortcut={{ modifiers: [\"ctrl\"], key: \"x\" }}\n            onAction={() => deleteAndGoBack(task.uuid)}\n          />\n          <Action\n            key=\"start\"\n            title={task.tags && Array.from(task.tags).includes(\"next\") ? \"Stop\" : \"Start\"}\n            shortcut={{ modifiers: [\"ctrl\"], key: \"s\" }}\n            onAction={() => startOrStopTask(task)}\n          />\n          <Action.Push\n            key=\"new\"\n            title=\"Add New Task\"\n            target={<AddTaskAdvanced />}\n            shortcut={{ modifiers: [\"cmd\"], key: \"n\" }}\n          />\n        </ActionPanel>\n      }\n      metadata={\n        <Detail.Metadata>\n          <Detail.Metadata.Label key=\"status\" title=\"Status:\" text={task.status} />\n          {task.project ? <Detail.Metadata.Label key=\"project\" title=\"Project:\" text={task.project} /> : \"\"}\n          {task.priority ? (\n            <Detail.Metadata.Label key=\"priority\" title=\"Priority:\" text={parsePriority(task.priority)} />\n          ) : (\n            \"\"\n          )}\n          {task.due ? <Detail.Metadata.Label key=\"due\" title=\"due:\" text={formatDueDate(task.due)} /> : \"\"}\n          <Detail.Metadata.Label key=\"Urgency\" title=\"Urgency:\" text={task.urgency.toLocaleString()} />\n          {task.start ? <Detail.Metadata.Label key=\"start\" title=\"Active for:\" text={getActiveTime(task.start)} /> : \"\"}\n          {task.entry ? <Detail.Metadata.Label key=\"entry\" title=\"Added on:\" text={formatDate(task.entry)} /> : \"\"}\n          {task.modified ? (\n            <Detail.Metadata.Label key=\"modified\" title=\"Modified on:\" text={formatDate(task.modified)} />\n          ) : (\n            \"\"\n          )}\n          {task.tags ? (\n            <Detail.Metadata.TagList key=\"TagsList\" title=\"tags\">\n              {Array.from(task.tags).map((tag) => {\n                return <Detail.Metadata.TagList.Item key={tag} text={tag} color={tagColorMap.get(tag) || Color.Blue} />;\n              })}\n            </Detail.Metadata.TagList>\n          ) : (\n            \"\"\n          )}\n        </Detail.Metadata>\n      }\n    />\n  );\n};\n\nexport default Details;\n", "function parseDate(timestamp: string): Date {\n  const year = timestamp.substring(0, 4);\n  const month = timestamp.substring(4, 6);\n  const day = timestamp.substring(6, 8);\n  const hours = timestamp.substring(9, 11);\n  const minutes = timestamp.substring(11, 13);\n  const seconds = timestamp.substring(13, 15);\n  const iso8601Timestamp = `${year}-${month}-${day}T${hours}:${minutes}:${seconds}Z`;\n\n  return new Date(iso8601Timestamp);\n}\n\nexport const formatDate = (date: string) => {\n  const dateObject = parseDate(date);\n\n  const isToday = (date: Date): boolean => {\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  };\n\n  const isYesterday = (date: Date): boolean => {\n    const yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    return (\n      date.getDate() === yesterday.getDate() &&\n      date.getMonth() === yesterday.getMonth() &&\n      date.getFullYear() === yesterday.getFullYear()\n    );\n  };\n\n  const formatTime = (date: Date): string => {\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const period = hours >= 12 ? \"PM\" : \"AM\";\n    return `${((hours + 11) % 12) + 1}:${minutes.toString().padStart(2, \"0\")} ${period}`;\n  };\n\n  if (isToday(dateObject)) {\n    return `Today at ${formatTime(dateObject)}`;\n  } else if (isYesterday(dateObject)) {\n    return `Yesterday at ${formatTime(dateObject)}`;\n  } else {\n    return dateObject.toLocaleDateString() + \" at \" + formatTime(dateObject);\n  }\n};\n\nexport const getActiveTime = (timestamp: string): string => {\n  const dateObject = parseDate(timestamp);\n  const now = new Date();\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n\n  const elapsed = now.getTime() - dateObject.getTime();\n\n  if (elapsed < msPerMinute) {\n    const seconds = Math.round(elapsed / 1000);\n    return `${seconds} second${seconds !== 1 ? \"s\" : \"\"}`;\n  } else if (elapsed < msPerHour) {\n    const minutes = Math.round(elapsed / msPerMinute);\n    return `${minutes} minute${minutes !== 1 ? \"s\" : \"\"}`;\n  } else if (elapsed < msPerDay) {\n    const hours = Math.round(elapsed / msPerHour);\n    return `${hours} hour${hours !== 1 ? \"s\" : \"\"}`;\n  } else if (elapsed < msPerMonth) {\n    const days = Math.round(elapsed / msPerDay);\n    return `${days} day${days !== 1 ? \"s\" : \"\"}`;\n  } else if (elapsed < msPerYear) {\n    const months = Math.round(elapsed / msPerMonth);\n    return `${months} month${months !== 1 ? \"s\" : \"\"}`;\n  } else {\n    const years = Math.round(elapsed / msPerYear);\n    return `${years} year${years !== 1 ? \"s\" : \"\"}`;\n  }\n};\n\nexport const formatDueDate = (dueDate: string): string => {\n  const dueDateObject = parseDate(dueDate);\n\n  const isToday = (date: Date): boolean => {\n    const today = new Date();\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    );\n  };\n\n  const isTomorrow = (date: Date): boolean => {\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    return (\n      date.getDate() === tomorrow.getDate() &&\n      date.getMonth() === tomorrow.getMonth() &&\n      date.getFullYear() === tomorrow.getFullYear()\n    );\n  };\n\n  const formatTime = (date: Date): string => {\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const period = hours >= 12 ? \"PM\" : \"AM\";\n    return `${((hours + 11) % 12) + 1}:${minutes.toString().padStart(2, \"0\")} ${period}`;\n  };\n\n  if (isToday(dueDateObject)) {\n    return `Today at ${formatTime(dueDateObject)}`;\n  } else if (isTomorrow(dueDateObject)) {\n    return `Tomorrow at ${formatTime(dueDateObject)}`;\n  } else {\n    return `${dueDateObject.toLocaleDateString()} at ${formatTime(dueDateObject)}`;\n  }\n};\n", "import { useState } from \"react\";\nimport { Action, ActionPanel, Form, popToRoot, showToast, Toast } from \"@raycast/api\";\nimport { Priority, Task } from \"../types/types\";\nimport { updateTask } from \"../api\";\nimport { formatDueDate } from \"../utils/dateFormatters\";\n\ninterface FormValues {\n  description?: string;\n  project?: string;\n  tags?: string;\n  due?: string;\n}\n\nconst Modify = (props: { task: Task }) => {\n  const { task } = props;\n\n  const formatPriority = (priority?: Priority) => {\n    switch (priority) {\n      case Priority.H:\n        return \"High\";\n      case Priority.M:\n        return \"Medium\";\n      case Priority.L:\n        return \"Low\";\n      default:\n        return \"None\";\n    }\n  };\n\n  const parsePriority = (priority: string): Priority | \"\" | undefined => {\n    switch (priority) {\n      case \"High\":\n        return Priority.H;\n      case \"Medium\":\n        return Priority.M;\n      case \"Low\":\n        return Priority.L;\n      case \"None\":\n        return \"\";\n      default:\n        return undefined;\n    }\n  };\n\n  const [descriptionError, setdescriptionError] = useState<string | undefined>();\n  const [tagsError, setTagsError] = useState<string | undefined>();\n  const [dueDateError, setDueDateError] = useState<string | undefined>();\n  const initialDueDate = task.due ? formatDueDate(task.due) : undefined;\n\n  const [selectedPriority, setSelectedPriority] = useState<string>(formatPriority(task.priority));\n\n  const dropDescriptionErrorIfNeeded = () => {\n    if (descriptionError && descriptionError.length > 0) {\n      setdescriptionError(undefined);\n    }\n  };\n\n  const dropTagsErrorIfNeeded = () => {\n    if (tagsError && tagsError.length > 0) {\n      setTagsError(undefined);\n    }\n  };\n\n  const dropDueDateErrorIfNeeded = () => {\n    if (dueDateError && dueDateError.length > 0) {\n      setDueDateError(undefined);\n    }\n  };\n\n  const formatTags = (tags: Set<string>) => {\n    return Array.from(tags)\n      .map((tag) => {\n        if (tag.startsWith(\"+\") || tag.startsWith(\"-\")) {\n          return tag;\n        }\n        return `+${tag}`;\n      })\n      .join(\",\");\n  };\n\n  const isFormValid = (description?: string, tags?: string) => {\n    let isValid = true;\n\n    if (!description || description.trim().length === 0) {\n      setdescriptionError(\"A task must at least have a description.\");\n      isValid = false;\n    }\n\n    if (tags && tags.includes(\" \")) {\n      setTagsError(\"spaces are not allowed. format: tag1,tag2,tag3\");\n      isValid = false;\n    }\n\n    if (tags) {\n      const tagsArray = tags.split(\",\");\n      const invalidTags = tagsArray.filter((tag) => !tag.startsWith(\"+\") && !tag.startsWith(\"-\"));\n      if (invalidTags.length > 0) {\n        setTagsError(\"Tags should start with + or -. Format: +tag1,-tag2,+tag3\");\n        isValid = false;\n      }\n    }\n\n    return isValid;\n  };\n\n  const onSubmit = async ({ description, project, tags, due }: FormValues) => {\n    if (!isFormValid(description, tags)) {\n      return;\n    }\n\n    const tagsArray = tags?.split(\",\");\n    const updatedDueDate = due === initialDueDate ? undefined : due;\n    const parsedPriority = parsePriority(selectedPriority);\n    try {\n      await updateTask(task.uuid, description, project, tagsArray, updatedDueDate, parsedPriority);\n      showToast({\n        title: \"Modified Task successfully\",\n        style: Toast.Style.Success,\n      });\n      popToRoot();\n    } catch (error) {\n      if (error instanceof Error && error.message.includes(\"not a valid date\")) {\n        setDueDateError(\"Invalid due date format. Use the 'Y-M-D' format or Taskwarrior shorthand.\");\n      } else {\n        console.error(error);\n        showToast({\n          title: `Error modifying task: ${error}`,\n          style: Toast.Style.Failure,\n        });\n      }\n    }\n  };\n\n  return (\n    <Form\n      actions={\n        <ActionPanel>\n          <Action.SubmitForm onSubmit={onSubmit} />\n        </ActionPanel>\n      }\n    >\n      <Form.TextField\n        id=\"description\"\n        key=\"description\"\n        title=\"Description\"\n        placeholder=\"task description\"\n        defaultValue={task.description}\n        error={descriptionError}\n        onChange={dropDescriptionErrorIfNeeded}\n        onBlur={(event) => {\n          if (event.target.value?.length == 0) {\n            setdescriptionError(\"A task must at least have a description.\");\n          } else {\n            dropDescriptionErrorIfNeeded();\n          }\n        }}\n      />\n      <Form.TextField\n        id=\"project\"\n        key=\"project\"\n        title=\"Project\"\n        placeholder=\"project name\"\n        defaultValue={task.project ? task.project : \"\"}\n        info=\"leave empty to delete or not add a new project\"\n      />\n      <Form.TextField\n        id=\"tags\"\n        title=\"Tags\"\n        placeholder=\"-tag1,+tag2,+tag3\"\n        defaultValue={task.tags ? formatTags(task.tags) : \"\"}\n        info=\"add comma saparated list of tags. +tag to add and -tag to remove\"\n        error={tagsError}\n        onChange={dropTagsErrorIfNeeded}\n        onBlur={(event) => {\n          if (event.target.value?.includes(\" \")) {\n            setTagsError(\"spaces are not allowed. format: tag1,tag2,tag3\");\n          } else {\n            dropTagsErrorIfNeeded();\n          }\n        }}\n      />\n      <Form.TextField\n        id=\"due\"\n        title=\"Due Date\"\n        placeholder=\"Y-M-D or Taskwarrior shorthand\"\n        defaultValue={initialDueDate}\n        info=\"Enter due date in Y-M-D format or Taskwarrior shorthand (e.g., 'today', 'tomorrow', '+3d', '+1w')\"\n        error={dueDateError}\n        onChange={dropDueDateErrorIfNeeded}\n      />\n      <Form.Dropdown id=\"priority\" title=\"Priority\" value={selectedPriority} onChange={setSelectedPriority}>\n        <Form.Dropdown.Item value=\"High\" title=\"High\" />\n        <Form.Dropdown.Item value=\"Medium\" title=\"Medium\" />\n        <Form.Dropdown.Item value=\"Low\" title=\"Low\" />\n        <Form.Dropdown.Item value=\"None\" title=\"None\" />\n      </Form.Dropdown>\n    </Form>\n  );\n};\n\nexport default Modify;\n", "import Modify from \"./components/Modify\";\nimport { Task } from \"./types/types\";\n\n// Returns the main React component for a view command\nexport default function Command() {\n  // Create an empty task object to be used by the Modify component\n  const emptyTask: Task = {\n    uuid: \"\",\n    description: \"\",\n    entry: \"\",\n    status: \"\",\n    urgency: 0,\n    priority: undefined,\n    project: \"\",\n    tags: new Set(),\n    due: \"\",\n  };\n\n  return <Modify task={emptyTask} />;\n}\n"],
  "mappings": "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",
  "names": ["list_active_tasks_exports", "__export", "list_active_tasks_default", "__toCommonJS", "import_api", "import_react", "import_child_process", "import_util", "import_api", "execPromise", "taskPath", "overrideError", "command", "getTasks", "tasks", "stdout", "stderr", "data", "a", "b", "getActiveTasks", "getTasks", "task", "getTasksForProject", "project", "deleteTask", "uuid", "stderr", "execPromise", "taskPath", "error", "markTaskAsDone", "updateTask", "description", "project", "tags", "due", "priority", "commandParts", "command", "getAllProjects", "tasks", "getActiveTasks", "projects", "task", "import_api", "import_jsx_runtime", "ProjectsDropdown", "props", "projects", "onProjectChange", "newValue", "project", "ProjectsDropdown_default", "import_react", "import_api", "parseDate", "timestamp", "year", "month", "day", "hours", "minutes", "seconds", "iso8601Timestamp", "formatDate", "date", "dateObject", "isToday", "today", "isYesterday", "yesterday", "formatTime", "period", "getActiveTime", "now", "msPerMinute", "msPerHour", "msPerDay", "msPerMonth", "msPerYear", "elapsed", "days", "months", "years", "formatDueDate", "dueDate", "dueDateObject", "isTomorrow", "tomorrow", "import_react", "import_api", "import_jsx_runtime", "Modify", "props", "task", "formatPriority", "priority", "parsePriority", "descriptionError", "setdescriptionError", "tagsError", "setTagsError", "dueDateError", "setDueDateError", "initialDueDate", "formatDueDate", "selectedPriority", "setSelectedPriority", "dropDescriptionErrorIfNeeded", "dropTagsErrorIfNeeded", "dropDueDateErrorIfNeeded", "formatTags", "tags", "tag", "isFormValid", "description", "isValid", "onSubmit", "project", "due", "tagsArray", "updatedDueDate", "parsedPriority", "updateTask", "error", "event", "Modify_default", "import_jsx_runtime", "Command", "Modify_default", "import_jsx_runtime", "getRandomColor", "availableColors", "randomIndex", "Details", "props", "task", "initialColors", "color", "assignRandomColorsToTags", "tags", "tagColorMap", "tag", "randomColor", "index", "showCustomToast", "title", "style", "message", "markTaskAsDoneAndGoBack", "taskUuid", "markTaskAsDone", "deleteAndGoBack", "uuid", "deleteTask", "parsePriority", "priority", "startOrStopTask", "action", "updateTask", "Modify_default", "Command", "formatDueDate", "getActiveTime", "formatDate", "Details_default", "import_jsx_runtime", "ListActiveTabs", "tasks", "setTasks", "projects", "setProjects", "getTasks", "getProjects", "showCustomToast", "title", "style", "message", "data", "getActiveTasks", "error", "getAllProjects", "filterByProject", "project", "getTasksForProject", "markTaskAsDoneAndUpdateList", "taskUuid", "markTaskAsDone", "onProjectChange", "newValue", "deleteAndUpdateList", "uuid", "deleteTask", "startOrStopTask", "task", "action", "updateTask", "ProjectsDropdown_default", "Command", "Details_default", "list_active_tasks_default"]
}
